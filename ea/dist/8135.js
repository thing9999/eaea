"use strict";(self.webpackChunkvolumetric_atmospheric_scattering=self.webpackChunkvolumetric_atmospheric_scattering||[]).push([[8135],{4898:(e,s,t)=>{t.d(s,{t:()=>i});var n=t(4988);class i extends n.t{constructor(e,s){super(e,s,3)}}},8135:(e,s,t)=>{t.r(s),t.d(s,{_WebAudioMainBus:()=>o});var n=t(4898);class i extends n.t{constructor(e,s){super(e,s)}}var r=t(186);class o extends i{constructor(e,s){super(e,s),this._subGraph=new o._SubGraph(this)}async _initAsync(e){if(await this._subGraph.initAsync(e),this.engine.mainOut&&!this._connect(this.engine.mainOut))throw new Error("Connect failed");this.engine._addMainBus(this)}dispose(){super.dispose(),this.engine._removeMainBus(this)}get _inNode(){return this._subGraph._inNode}get _outNode(){return this._subGraph._outNode}_connect(e){return!!super._connect(e)&&(e._inNode&&this._outNode?.connect(e._inNode),!0)}_disconnect(e){return!!super._disconnect(e)&&(e._inNode&&this._outNode?.disconnect(e._inNode),!0)}getClassName(){return"_WebAudioMainBus"}}o._SubGraph=class extends r.H{get _downstreamNodes(){return this._owner._downstreamNodes??null}}}}]);